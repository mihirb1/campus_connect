services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      client:
        condition: service_healthy
        restart: true
      server:
        condition: service_healthy
        restart: true

  client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    ports:
      - "5173:5173"
    env_file:
      - .env
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      server:
        condition: service_healthy
        restart: true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173"]
      interval: 30s
      retries: 5
      start_period: 10s
      timeout: 5s

  server:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    volumes:
      - ./server:/app
      - /app/node_modules
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
        restart: true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      retries: 5
      start_period: 5s
      timeout: 5s

  db:
    image: postgres:latest
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - acm_website_db_data:/var/lib/postgresql/data
      - ./db:/docker-entrypoint-initdb.d/
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 15s

volumes:
  acm_website_db_data:

